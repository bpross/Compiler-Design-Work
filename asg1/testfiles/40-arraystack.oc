// $Id: 40-arraystack.oc,v 1.3 2011-09-26 14:22:22-07 - - $

#include "oclib.oh"

#define EMPTY (-1)
struct stack {
   string[] data;
   int size;
   int top;
}

stack new_stack (int size) {
   stack stack = new stack (); // Zeros out both fields.
   stack.data = new string[size]; // Array of null pointers.
   stack.size = size;
   stack.top = EMPTY;
   return stack;
}

void push (stack stack, string str) {
   assert (stack.top < stack.size - 1);
   stack.top = stack.top + 1;
   stack.data[stack.top] = str;
}

string pop (stack stack) {
   assert (stack.top != EMPTY);
   string tmp = stack.data[top];
   top = top - 1;
   return tmp;
}

bool empty (stack stack) {
   return stack.top == EMPTY;
}

// Main program.
string[] argv = getargv ();
stack stack = new_stack ();

int argi = 0;
while (argv[argi] != null) {
   push (stack, argv[argi]);
   argi = argi + 1;
}

while (! empty (stack) {
   puts (pop (stack));
   endl ();
}

