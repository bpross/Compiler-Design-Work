Rules never reduced

   15 token: TOK_CHAR_KW


State 14 conflicts: 44 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: program token
    2        | /* empty */

    3 token: TOK_IDENT
    4      | TOK_LIT_CHAR
    5      | TOK_LIT_INT
    6      | TOK_LIT_STRING
    7      | TOK_CHAR_KW
    8      | TOK_WHILE_KW
    9      | TOK_IF_KW
   10      | TOK_ELSE_KW
   11      | TOK_RETURN_KW
   12      | TOK_NEW_KW
   13      | TOK_VOID_KW
   14      | TOK_BOOL_KW
   15      | TOK_CHAR_KW
   16      | TOK_INT_KW
   17      | TOK_STRUCT_KW
   18      | TOK_STRING_KW
   19      | TOK_UNCHECKED_TYPE_KW
   20      | TOK_FALSE_KW
   21      | TOK_TRUE_KW
   22      | TOK_NULL_KW
   23      | '('
   24      | ')'
   25      | '['
   26      | ']'
   27      | '{'
   28      | '}'
   29      | ':'
   30      | ';'
   31      | ','
   32      | '='
   33      | TOK_EQ
   34      | TOK_NE
   35      | TOK_GT
   36      | TOK_GE
   37      | TOK_LT
   38      | TOK_LE
   39      | '+'
   40      | '-'
   41      | '*'
   42      | '/'
   43      | '%'
   44      | '.'
   45      | '!'
   46      | '@'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 45
'%' (37) 43
'(' (40) 23
')' (41) 24
'*' (42) 41
'+' (43) 39
',' (44) 31
'-' (45) 40
'.' (46) 44
'/' (47) 42
':' (58) 29
';' (59) 30
'=' (61) 32
'@' (64) 46
'[' (91) 25
']' (93) 26
'{' (123) 27
'}' (125) 28
error (256)
TOK_IDENT (258) 3
TOK_LIT_CHAR (259) 4
TOK_LIT_INT (260) 5
TOK_LIT_STRING (261) 6
TOK_WHILE_KW (262) 8
TOK_IF_KW (263) 9
TOK_ELSE_KW (264) 10
TOK_RETURN_KW (265) 11
TOK_NEW_KW (266) 12
TOK_VOID_KW (267) 13
TOK_BOOL_KW (268) 14
TOK_CHAR_KW (269) 7 15
TOK_INT_KW (270) 16
TOK_STRUCT_KW (271) 17
TOK_STRING_KW (272) 18
TOK_UNCHECKED_TYPE_KW (273) 19
TOK_FALSE_KW (274) 20
TOK_TRUE_KW (275) 21
TOK_NULL_KW (276) 22
TOK_EQ (277) 33
TOK_NE (278) 34
TOK_GT (279) 35
TOK_GE (280) 36
TOK_LT (281) 37
TOK_LE (282) 38


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1 2, on right: 0 1
token (48)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46, on right: 1


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . token

    $end                   shift, and go to state 2
    TOK_IDENT              shift, and go to state 3
    TOK_LIT_CHAR           shift, and go to state 4
    TOK_LIT_INT            shift, and go to state 5
    TOK_LIT_STRING         shift, and go to state 6
    TOK_WHILE_KW           shift, and go to state 7
    TOK_IF_KW              shift, and go to state 8
    TOK_ELSE_KW            shift, and go to state 9
    TOK_RETURN_KW          shift, and go to state 10
    TOK_NEW_KW             shift, and go to state 11
    TOK_VOID_KW            shift, and go to state 12
    TOK_BOOL_KW            shift, and go to state 13
    TOK_CHAR_KW            shift, and go to state 14
    TOK_INT_KW             shift, and go to state 15
    TOK_STRUCT_KW          shift, and go to state 16
    TOK_STRING_KW          shift, and go to state 17
    TOK_UNCHECKED_TYPE_KW  shift, and go to state 18
    TOK_FALSE_KW           shift, and go to state 19
    TOK_TRUE_KW            shift, and go to state 20
    TOK_NULL_KW            shift, and go to state 21
    TOK_EQ                 shift, and go to state 22
    TOK_NE                 shift, and go to state 23
    TOK_GT                 shift, and go to state 24
    TOK_GE                 shift, and go to state 25
    TOK_LT                 shift, and go to state 26
    TOK_LE                 shift, and go to state 27
    '('                    shift, and go to state 28
    ')'                    shift, and go to state 29
    '['                    shift, and go to state 30
    ']'                    shift, and go to state 31
    '{'                    shift, and go to state 32
    '}'                    shift, and go to state 33
    ':'                    shift, and go to state 34
    ';'                    shift, and go to state 35
    ','                    shift, and go to state 36
    '='                    shift, and go to state 37
    '+'                    shift, and go to state 38
    '-'                    shift, and go to state 39
    '*'                    shift, and go to state 40
    '/'                    shift, and go to state 41
    '%'                    shift, and go to state 42
    '.'                    shift, and go to state 43
    '!'                    shift, and go to state 44
    '@'                    shift, and go to state 45

    token  go to state 46


state 2

    0 $accept: program $end .

    $default  accept


state 3

    3 token: TOK_IDENT .

    $default  reduce using rule 3 (token)


state 4

    4 token: TOK_LIT_CHAR .

    $default  reduce using rule 4 (token)


state 5

    5 token: TOK_LIT_INT .

    $default  reduce using rule 5 (token)


state 6

    6 token: TOK_LIT_STRING .

    $default  reduce using rule 6 (token)


state 7

    8 token: TOK_WHILE_KW .

    $default  reduce using rule 8 (token)


state 8

    9 token: TOK_IF_KW .

    $default  reduce using rule 9 (token)


state 9

   10 token: TOK_ELSE_KW .

    $default  reduce using rule 10 (token)


state 10

   11 token: TOK_RETURN_KW .

    $default  reduce using rule 11 (token)


state 11

   12 token: TOK_NEW_KW .

    $default  reduce using rule 12 (token)


state 12

   13 token: TOK_VOID_KW .

    $default  reduce using rule 13 (token)


state 13

   14 token: TOK_BOOL_KW .

    $default  reduce using rule 14 (token)


state 14

    7 token: TOK_CHAR_KW .
   15      | TOK_CHAR_KW .

    $end                   reduce using rule 7 (token)
    $end                   [reduce using rule 15 (token)]
    TOK_IDENT              reduce using rule 7 (token)
    TOK_IDENT              [reduce using rule 15 (token)]
    TOK_LIT_CHAR           reduce using rule 7 (token)
    TOK_LIT_CHAR           [reduce using rule 15 (token)]
    TOK_LIT_INT            reduce using rule 7 (token)
    TOK_LIT_INT            [reduce using rule 15 (token)]
    TOK_LIT_STRING         reduce using rule 7 (token)
    TOK_LIT_STRING         [reduce using rule 15 (token)]
    TOK_WHILE_KW           reduce using rule 7 (token)
    TOK_WHILE_KW           [reduce using rule 15 (token)]
    TOK_IF_KW              reduce using rule 7 (token)
    TOK_IF_KW              [reduce using rule 15 (token)]
    TOK_ELSE_KW            reduce using rule 7 (token)
    TOK_ELSE_KW            [reduce using rule 15 (token)]
    TOK_RETURN_KW          reduce using rule 7 (token)
    TOK_RETURN_KW          [reduce using rule 15 (token)]
    TOK_NEW_KW             reduce using rule 7 (token)
    TOK_NEW_KW             [reduce using rule 15 (token)]
    TOK_VOID_KW            reduce using rule 7 (token)
    TOK_VOID_KW            [reduce using rule 15 (token)]
    TOK_BOOL_KW            reduce using rule 7 (token)
    TOK_BOOL_KW            [reduce using rule 15 (token)]
    TOK_CHAR_KW            reduce using rule 7 (token)
    TOK_CHAR_KW            [reduce using rule 15 (token)]
    TOK_INT_KW             reduce using rule 7 (token)
    TOK_INT_KW             [reduce using rule 15 (token)]
    TOK_STRUCT_KW          reduce using rule 7 (token)
    TOK_STRUCT_KW          [reduce using rule 15 (token)]
    TOK_STRING_KW          reduce using rule 7 (token)
    TOK_STRING_KW          [reduce using rule 15 (token)]
    TOK_UNCHECKED_TYPE_KW  reduce using rule 7 (token)
    TOK_UNCHECKED_TYPE_KW  [reduce using rule 15 (token)]
    TOK_FALSE_KW           reduce using rule 7 (token)
    TOK_FALSE_KW           [reduce using rule 15 (token)]
    TOK_TRUE_KW            reduce using rule 7 (token)
    TOK_TRUE_KW            [reduce using rule 15 (token)]
    TOK_NULL_KW            reduce using rule 7 (token)
    TOK_NULL_KW            [reduce using rule 15 (token)]
    TOK_EQ                 reduce using rule 7 (token)
    TOK_EQ                 [reduce using rule 15 (token)]
    TOK_NE                 reduce using rule 7 (token)
    TOK_NE                 [reduce using rule 15 (token)]
    TOK_GT                 reduce using rule 7 (token)
    TOK_GT                 [reduce using rule 15 (token)]
    TOK_GE                 reduce using rule 7 (token)
    TOK_GE                 [reduce using rule 15 (token)]
    TOK_LT                 reduce using rule 7 (token)
    TOK_LT                 [reduce using rule 15 (token)]
    TOK_LE                 reduce using rule 7 (token)
    TOK_LE                 [reduce using rule 15 (token)]
    '('                    reduce using rule 7 (token)
    '('                    [reduce using rule 15 (token)]
    ')'                    reduce using rule 7 (token)
    ')'                    [reduce using rule 15 (token)]
    '['                    reduce using rule 7 (token)
    '['                    [reduce using rule 15 (token)]
    ']'                    reduce using rule 7 (token)
    ']'                    [reduce using rule 15 (token)]
    '{'                    reduce using rule 7 (token)
    '{'                    [reduce using rule 15 (token)]
    '}'                    reduce using rule 7 (token)
    '}'                    [reduce using rule 15 (token)]
    ':'                    reduce using rule 7 (token)
    ':'                    [reduce using rule 15 (token)]
    ';'                    reduce using rule 7 (token)
    ';'                    [reduce using rule 15 (token)]
    ','                    reduce using rule 7 (token)
    ','                    [reduce using rule 15 (token)]
    '='                    reduce using rule 7 (token)
    '='                    [reduce using rule 15 (token)]
    '+'                    reduce using rule 7 (token)
    '+'                    [reduce using rule 15 (token)]
    '-'                    reduce using rule 7 (token)
    '-'                    [reduce using rule 15 (token)]
    '*'                    reduce using rule 7 (token)
    '*'                    [reduce using rule 15 (token)]
    '/'                    reduce using rule 7 (token)
    '/'                    [reduce using rule 15 (token)]
    '%'                    reduce using rule 7 (token)
    '%'                    [reduce using rule 15 (token)]
    '.'                    reduce using rule 7 (token)
    '.'                    [reduce using rule 15 (token)]
    '!'                    reduce using rule 7 (token)
    '!'                    [reduce using rule 15 (token)]
    '@'                    reduce using rule 7 (token)
    '@'                    [reduce using rule 15 (token)]
    $default               reduce using rule 7 (token)


state 15

   16 token: TOK_INT_KW .

    $default  reduce using rule 16 (token)


state 16

   17 token: TOK_STRUCT_KW .

    $default  reduce using rule 17 (token)


state 17

   18 token: TOK_STRING_KW .

    $default  reduce using rule 18 (token)


state 18

   19 token: TOK_UNCHECKED_TYPE_KW .

    $default  reduce using rule 19 (token)


state 19

   20 token: TOK_FALSE_KW .

    $default  reduce using rule 20 (token)


state 20

   21 token: TOK_TRUE_KW .

    $default  reduce using rule 21 (token)


state 21

   22 token: TOK_NULL_KW .

    $default  reduce using rule 22 (token)


state 22

   33 token: TOK_EQ .

    $default  reduce using rule 33 (token)


state 23

   34 token: TOK_NE .

    $default  reduce using rule 34 (token)


state 24

   35 token: TOK_GT .

    $default  reduce using rule 35 (token)


state 25

   36 token: TOK_GE .

    $default  reduce using rule 36 (token)


state 26

   37 token: TOK_LT .

    $default  reduce using rule 37 (token)


state 27

   38 token: TOK_LE .

    $default  reduce using rule 38 (token)


state 28

   23 token: '(' .

    $default  reduce using rule 23 (token)


state 29

   24 token: ')' .

    $default  reduce using rule 24 (token)


state 30

   25 token: '[' .

    $default  reduce using rule 25 (token)


state 31

   26 token: ']' .

    $default  reduce using rule 26 (token)


state 32

   27 token: '{' .

    $default  reduce using rule 27 (token)


state 33

   28 token: '}' .

    $default  reduce using rule 28 (token)


state 34

   29 token: ':' .

    $default  reduce using rule 29 (token)


state 35

   30 token: ';' .

    $default  reduce using rule 30 (token)


state 36

   31 token: ',' .

    $default  reduce using rule 31 (token)


state 37

   32 token: '=' .

    $default  reduce using rule 32 (token)


state 38

   39 token: '+' .

    $default  reduce using rule 39 (token)


state 39

   40 token: '-' .

    $default  reduce using rule 40 (token)


state 40

   41 token: '*' .

    $default  reduce using rule 41 (token)


state 41

   42 token: '/' .

    $default  reduce using rule 42 (token)


state 42

   43 token: '%' .

    $default  reduce using rule 43 (token)


state 43

   44 token: '.' .

    $default  reduce using rule 44 (token)


state 44

   45 token: '!' .

    $default  reduce using rule 45 (token)


state 45

   46 token: '@' .

    $default  reduce using rule 46 (token)


state 46

    1 program: program token .

    $default  reduce using rule 1 (program)
